//invis till endInvis is removed by tokenizer
#invis
//for syntax highlighting
func ctor();
func println(str msg);
func print(str msg);
func assertThrow(bool condition, str msg);
func assertFail(bool condition, str msg);
struct func;
struct pub;
struct priv;
struct delete;
struct mut;
class i32;
class f64;
class ui64;
class str;
class none;
class f;
# endInvis

func test(i32 foo, mut f64 bar): str& 
{
    i32 assingVar;
    assingVar = 1 + 2;//(2 * (2 + 3));
    assingVar += 1;

    f64 initVar = 2.1;//((6 * (6 * 7 + 5)) % 15) / 2.36;
    i8 typeConvertion = assingVar;

    //assertFail(idk == 10, f"value:{foo}, should be 10")
}

func main(): i32
{
    test(1 + 2, 2.0);

    //print("");
    //println("hello world");
}