//invis till endInvis is removed by tokenizer
#invis
//for syntax highlighting
func ctor();
func println(str msg);
func print(str msg);
func assertThrow(bool condition, str msg);
func assertFail(bool condition, str msg);
struct func;
struct pub;
struct priv;
struct delete;
struct mut;
class i32;
class f64;
class ui64;
class str;
class none;
class f;
# endInvis

class Option_i32
{
    priv i32 value = 0;
    pub bool hasValue = false;

    pub ctor() { }
    pub ctor(i32 initValue)
    {
        hasValue = initValue;
        hasValue = true;
    }

    pub set(i32 setValue): none
    {
        value = setValue;
        hasValue = true;
    }

    pub tryGet(out i32 outValue): bool
    {
        if(!hasValue)
        {
            return false;
        }
        outValue = value;
        return true;
    }
}

func main(): i32
{
    Option_i32 option;
    i32 value;
    if(option.tryGet(out value))
    {
        println("obj has no value (expected)");
    }

    option.set(5);
    if(option.tryGet(out value))
    {
        println("obj has no value (unexpected)");
        return 1;
    }

    println(f"obj value: {value}");
    return 0;
}